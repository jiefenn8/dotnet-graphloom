//-----------------------------------------------------------------------
// <copyright file="ITermMap.cs" company="github.com/jiefenn8">
//     Copyright (c) 2019 - GraphLoom contributors
//     (github.com/jiefenn8/dotnet-graphloom)
//
//     This software is made available under the terms of Apache License,
//     Version 2.0.
// </copyright>
//-----------------------------------------------------------------------

using GraphLoom.Mapper.Core.InputSource;
using VDS.RDF;

namespace GraphLoom.Mapper.RDF.R2RML
{
    /// <summary>
    /// The TermType to return generated term as.
    /// </summary>
    public enum TermType
    {
        /// <summary>
        /// If no term type is given. Default.
        /// </summary>
        UNDEFINED,

        /// <summary>
        /// Term type output as a IRI.
        /// </summary>
        IRI,

        /// <summary>
        /// Term type output as a Blank.
        /// </summary>
        BLANK,

        /// <summary>
        /// Term type output as a Literal.
        /// </summary>
        LITERAL
    }

    /// <summary>
    /// This interface defines the base methods that manages the common mapping of
    /// any given source to their respective RDF terms.
    /// </summary>
    public interface ITermMap
    {
        /// <summary>
        /// Returns a generated term node using the provided entity
        /// properties collections.The type of term node returned
        /// depends on any class term type declared.
        /// </summary>
        /// <param name="entity">containing any data needed to generate term</param>
        /// <returns>the term node generated by this term map</returns>
        INode GenerateRDFTerm(IEntity entity);
    }
}
